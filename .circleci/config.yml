# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

    working_directory: ~/xkcd-excuse-generator

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_testing.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_testing.txt" }}

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pip install -r requirements_testing.txt
            pytest

      - run:
          name: try to package
          command: |
            . venv/bin/activate
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              zappa package dev
            else
              zappa package prod
            fi

      - deploy:
          name: deploy
          command: |
            . venv/bin/activate
            mkdir -p ~/.aws
            echo "[mislavcimpersak]" >> ~/.aws/credentials
            echo "aws_access_key_id = "$AWS_ACCESS_KEY_ID >> ~/.aws/credentials
            echo "aws_secret_access_key = "$AWS_SECRET_ACCESS_KEY >> ~/.aws/credentials
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              if
                zappa status dev;
              then
                zappa update dev;
              else
                zappa deploy dev;
              fi
            else
              if
                zappa status prod;
              then
                zappa update prod;
              else
                zappa deploy prod;
              fi
            fi
